trigger:
- master

pr:
- master

jobs:
- job: macOS
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install Node.js'

  - script: npm install
    displayName: 'npm install'

  - script: npm test
    displayName: 'npm test'

  - script: npm run build
    displayName: 'npm build'
    condition:
      eq(variables['Build.Reason'], 'PullRequest')

  - script: npm run buildAndPublish
    displayName: 'npm build and sign'
    condition:
      ne(variables['Build.Reason'], 'PullRequest')
    env:
      CSC_KEY_PASSWORD: $(CSC_KEY_PASSWORD_MAC)
      CSC_LINK: w3c-certs-mac.p12
      APP_PW: $(APP_PW)
      GH_TOKEN: $(GH_TOKEN)


  - task: CopyFiles@2
    inputs:
      contents: 'dist_electron/w3champions*.dmg'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: 'drop'
      publishLocation: 'Container'

- job: Windows
  pool:
    vmImage: 'windows-latest'
    demands:
    - msbuild
    - visualstudio
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install Node.js'

  - script: npm install
    displayName: 'npm install'

  - script: npm test
    displayName: 'npm test'

  - script: npm run build
    displayName: 'npm build'
    condition:
      eq(variables['Build.Reason'], 'PullRequest')

  - script: npm run buildAndPublish
    displayName: 'npm build and sign'
    condition:
      ne(variables['Build.Reason'], 'PullRequest')
    env:
#      CSC_KEY_PASSWORD: $(CSC_KEY_PASSWORD_WIN)
#      CSC_LINK: w3c-certs-win.pfx
      GH_TOKEN: $(GH_TOKEN)

  - task: CopyFiles@2
    inputs:
      contents: 'dist_electron/w3champions Setup *.exe'
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: 'drop'
      publishLocation: 'Container'
