trigger:
- master

pr:
- master

jobs:
- job: macOS
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '22.x'
    displayName: 'Install Node.js'

  - script: npm install
    displayName: 'npm install'

  - script: npm test
    displayName: 'npm test'

  - script: npm run build
    displayName: 'npm build'
    condition:
      eq(variables['Build.Reason'], 'PullRequest')

  - script: npm run buildAndPublish
    displayName: 'npm build and sign'
    condition:
      ne(variables['Build.Reason'], 'PullRequest')
    env:
      CSC_KEY_PASSWORD: $(CSC_KEY_PASSWORD_MAC)
      CSC_LINK: w3c-certs-mac.p12
      APP_PW: $(APP_PW)
      APPLE_TEAM_ID: $(APPLE_TEAM_ID)
      GH_TOKEN: $(GH_TOKEN)


  - task: CopyFiles@2
    inputs:
      contents: 'dist_electron/w3champions*.dmg'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: 'drop'
      publishLocation: 'Container'

- job: Windows
  pool:
    vmImage: 'windows-latest'
    demands:
    - msbuild
    - visualstudio
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '22.x'
    displayName: 'Install Node.js'

  - powershell: | 
      $build=(Get-Content -Raw -Path package.json | ConvertFrom-Json).version
      echo "##vso[task.setvariable variable=BUILD_NUMBER;]$build"
    displayName: 'set build version'

  - script: npm install
    displayName: 'npm install'

  - script: npm test
    displayName: 'npm test'

  - script: npm run build
    displayName: 'npm build'
    condition:
      eq(variables['Build.Reason'], 'PullRequest')

#  - task: DotNetCoreCLI@2
#    inputs:
#      command: 'custom'
#      custom: 'tool'
#      arguments: 'install --global azuresigntool'
#    displayName: Install AzureSignTool
  
#  - task: CmdLine@2
#    inputs:
#      script: AzureSignTool sign -kvu "$(vault-uri)" -kvi "$(app-client-id)" -kvs "$(app-secret-id)" -kvc "w3champions-ov" -kvt "$(app-tenant-id)" -v "dist_electron/w3champions Setup $(BUILD_NUMBER).exe"
#    displayName: 'Sign the build'

  - task: DownloadSecureFile@1
    name: OVCertificate
    inputs:
      secureFile: w3champions-ov-certificate.pfx
    displayName: 'Download OV Cert' 

  - script: npm run buildAndPublish
    displayName: 'electron build & publish'
    condition:
      ne(variables['Build.Reason'], 'PullRequest')
    env:
      CSC_KEY_PASSWORD: $(OV_CERT_PASSWORD)
      CSC_LINK: $(OVCertificate.secureFilePath)
      GH_TOKEN: $(GH_TOKEN)

  - task: CopyFiles@2
    inputs:
      contents: 'dist_electron/w3champions Setup *.exe'
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: 'drop'
      publishLocation: 'Container'
